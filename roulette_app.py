# -*- coding: utf-8 -*-
"""roulette_app.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1F3zkJxniaVryfRtipq4UXD88AQQkH-sN
"""

import tkinter as tk
from tkinter import messagebox
import threading

class RouletteApp(tk.Tk):
    def __init__(self):
        super().__init__()
        self.title("Roulette Bet Analyzer")

        self.numbers = []
        self.lookback = 10  # Default lookback amount
        self.lock = threading.Lock()

        self.setup_ui()

    def setup_ui(self):
        self.entry_label = tk.Label(self, text="Enter Number:")
        self.entry_label.grid(row=0, column=0)

        self.number_entry = tk.Entry(self)
        self.number_entry.grid(row=0, column=1)

        self.submit_button = tk.Button(self, text="Submit", command=self.submit_number)
        self.submit_button.grid(row=0, column=2)

        self.lookback_label = tk.Label(self, text="Lookback:")
        self.lookback_label.grid(row=1, column=0)

        self.lookback_entry = tk.Entry(self)
        self.lookback_entry.insert(0, "10")
        self.lookback_entry.grid(row=1, column=1)

        self.analyze_button = tk.Button(self, text="Analyze", command=self.analyze_numbers)
        self.analyze_button.grid(row=1, column=2)

        self.number_listbox = tk.Listbox(self)
        self.number_listbox.grid(row=2, column=0, columnspan=3, padx=10, pady=10, sticky="nsew")

    def submit_number(self):
        number = self.number_entry.get().strip()
        if number.isdigit():
            with self.lock:
                self.numbers.append(int(number))
            self.update_number_listbox()
        else:
            messagebox.showerror("Error", "Please enter a valid number.")

    def update_number_listbox(self):
        self.number_listbox.delete(0, tk.END)
        for number in self.numbers[-self.lookback:]:
            self.number_listbox.insert(tk.END, number)

    def analyze_numbers(self):
        with self.lock:
            recent_numbers = self.numbers[-self.lookback:]

        if all(num % 2 == 0 for num in recent_numbers):
            messagebox.showinfo("Analysis Result", "Place Bet on ODD!")
        elif all(num % 2 != 0 for num in recent_numbers):
            messagebox.showinfo("Analysis Result", "Place Bet on EVEN!")
        elif all(19 <= num <= 36 for num in recent_numbers):
            messagebox.showinfo("Analysis Result", "Place Bet on 1 - 18!")
        elif all(1 <= num <= 18 for num in recent_numbers):
            messagebox.showinfo("Analysis Result", "Place Bet on 19 - 36!")
        elif all(num % 2 == 0 for num in recent_numbers if num in [2, 4, 6, 8, 10, 11, 13, 15, 17, 20, 22, 24, 26, 28, 29, 31, 33, 35]):
            messagebox.showinfo("Analysis Result", "Place Bet on BLACK!")
        elif all(num % 2 == 0 for num in recent_numbers if num in [1, 3, 5, 7, 9, 12, 14, 16, 18, 19, 21, 23, 25, 27, 30, 32, 34, 36]):
            messagebox.showinfo("Analysis Result", "Place Bet on RED!")
        else:
            messagebox.showinfo("Analysis Result", "No consistent pattern found.")

if __name__ == "__main__":
    app = RouletteApp()
    app.mainloop()